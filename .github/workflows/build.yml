name: 'Build and push'

# on:
#   push:
#     branches:
#       - main

on:
  pull_request:
    types: [closed]
    branches:
      - 'main'
    
  # push:
  #   tags: [ v* ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  # VERSION: v1.0.19

jobs:
  build_and_push:
    name: "build image and push"
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buidlx
        uses: docker/setup-buildx-action@v3

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Login to container-registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          # images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # tags: |
          #   type=schedule
          #   type=ref,event=branch
          #   type=ref,event=tag
          #   type=ref,event=pr
          tags: |
            type=sha,enable=true,priority=100,prefix=sha-,suffix=,format=short

      # - name: Build and push container image
      #   uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     # tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
      #     labels: ${{ steps.meta.outputs.labels }}

      - name: Update image tag and push changes to git
        run: |
          sed -i.bak "s/tag:.*$/tag: $(git rev-parse --short ${{ github.sha }})/" ./helm/values.yaml
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "indikaimk@gmail.com"
          git add .
          git commit -m "bump image version"
          git push